  (P58)代理模式是指为目标对象提供一个代理对象，外部对目标程序的访问，通过代理委托进行，以达到访问控制的目的。
为保持行为的一致性，代理类通常与委托类实现同一接口，所以在访问者看来，两者没有区别。通过代理类这一中间层，
能有效控制对委托类对象的直接访问，也可以很好地隐藏和保护委托类对象
  总而言之，在我看来代理模式无非就是为了保护和修饰委托对象。我觉得修饰作用更明显些。就静态代理，把代理类理解
成委托类的一个装饰类也是完全可以的。
  静态代理中，代理类可以直接继承委托类，然后重写需要的方法。这也就导致了代理的局限性，每一个方法都需要重写，
并且只针对一个委托类。
  不过也正是重写了所有需要的方法，在有自身调用自身方法的情况时，静态代理可以调用修饰后的方法，而动态方法不能。
例如Person类中有一个可以设置所有属性的setter方法，其中调用了所有属性相应的set方法，静态代理是就可以调用重写后
的set方法。而动态代理不行。
  动态代理的好处很明显，只用写一个类就可以对想使用的方法进行代理。我个人感觉动态代理更像是代理的是方法，而不是
类。动态代理可以修饰有相同升级需求的方法，并且不局限于某一个类。如果同一个类中的方法有不一样的升级需要也是需要
很多动态代理类。而且动态代理只能代理，那些从接口实现而来的类，我开始Person没有实现任何接口，因此不能用动态代理。